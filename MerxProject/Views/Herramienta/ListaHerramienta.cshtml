@model MerxProject.Models.PaginadorGenerico<MerxProject.Models.Herramienta>

@{
    ViewBag.Title = "Lista de herramientas";
    
}
<link href="~/Content/assets/css/main.css" rel="stylesheet" />
<h2>Lista de Herramientas</h2>
@if (Session["res"] != null)
{
    string color;
    string mensaje = Session["res"].ToString();
    Session.Remove("res");

    if (Session["tipo"] != null)
    {
        color = "#18ce65";
    }
    else
    {
        color = "#cc0001";
    }
    <div class="panel panel-default" id="current-panel">
        <table class="table table-hover">
            <thead>
                <tr style="background-color:@color">
                    <th>
                        <p style="text-align: center">
                            @mensaje
                        </p>
                    </th>
                    <th>
                        <a href="#current-panel" class="close" data-dismiss="alert" aria-label="close" id="hide">
                            &times;
                        </a>
                    </th>
                </tr>
            </thead>
        </table>
    </div>
    Session.Remove("tipo");

}
@if (ViewBag.error != null)
{
    string error = ViewBag.error;
    ViewBag.error = null;
    <div class="panel panel-default" id="current-panel">
        <table class="table table-hover">
            <thead>
                <tr style="background-color: #cc0001">
                    <th>
                        <p style="text-align: center">
                            @error
                        </p>
                    </th>
                    <th>
                        <a href="#current-panel" class="close" data-dismiss="alert" aria-label="close" id="hide">
                            &times;
                        </a>
                    </th>
                </tr>
            </thead>
        </table>
    </div>
}
<button class="btn btn-primary btn-sm pull-right" data-toggle="modal" id="Nuevo">Nuevo</button>
<div class="modal fade" data-keyboard="false" data-backdrop="static" id="idModalRegistrar" tabindex="-1" data-url='@Url.Action("popUpHerramienta", "Herramienta", new { applicationUser = "", accion = "1" })'></div>
<br />
@using (Html.BeginForm("BuscarHerramienta", "Herramienta", FormMethod.Post))
{
    <div class="container">
        <div class="row">
            <div class="col-xs-8">
                <div class="input-group" style="display: inline; vertical-align: top; line-height: 28px;">
                    <input type="text" class="form-control" name="param" placeholder="Search term...">
                    <input type="submit" name="Subir" value="Buscar" class="btn btn-primary" />

                </div>
            </div>
        </div>
    </div>
}


<br />

<table class="table">

    <tr>
        <th>
            Nombre
        </th>
        <th>
            Descripción
        </th>
        <th>
            Precio
        </th>
        <th>
            Cantidad
        </th>
        <th>
            En uso
        </th>
        <th>
            Imagen
        </th>
        <th>
            Estado
        </th>
    </tr>
    @foreach (var item in Model.Resultado)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Nombre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Descripcion)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Precio)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cantidad)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EnUso)
        </td>
        <td>
            <img src="~/Content/assets/img/Herramienta/@item.Imagen" width="100px" />
        </td>
        <td>
            @if (item.EnUso > 0)
            {
                using (Html.BeginForm("reportarHerramienta", "Herramienta", FormMethod.Get))
                {
                    <input type="hidden" name="Id" value="@item.Id" />
                    <input type="hidden" name="accion" value="6" />
                    <input type="submit" name="name" value="Reportar herramienta" class="btn btn-primary btn-sm" />
                }
            }
            @if (ViewBag.admin != null)
            {
                if (ViewBag.admin && item.Reportada)
                {
                    <button type="submit" class="btn btn-primary btn-sm" data-toggle="modal" id="@item.Id" onclick="createModalReport('@Url.Action("reportarHerramienta", "Herramienta", new { id = item.Id, accion = "7" })')">Ver reportes</button>
                }
            }
            </td>

            <td>
                @if (item.EnUso < item.Cantidad)
                {
                    using (Html.BeginForm("popUpHerramienta", "Herramienta", FormMethod.Get))
                    {
                        <input type="hidden" name="id" value="@item.Id" />
                        <input type="hidden" name="accion" value="4" />
                        <input type="submit" name="name" value="Tomar herramienta" class="btn btn-primary btn-sm" />
                    }
                }
                @using (Html.BeginForm("popUpHerramienta", "Herramienta", FormMethod.Get))
                {
                    <input type="hidden" name="id" value="@item.Id" />
                    <input type="hidden" name="accion" value="5" />
                    <input type="submit" name="name" value="Devolver herramienta" class="btn btn-primary btn-sm" />
                }
            </td>
            <td>
                @if (item.EnUso > 0)
                {
                    if (ViewBag.reportes != null)
                    {
                        var reportes = new List<Tuple<int, int>>();
                        reportes = ViewBag.reportes;
                        if (reportes.Any(x=>x.Item1 == item.Id))
                        {
                            foreach (var rep in reportes)
                            {
                                if (rep.Item1 == item.Id)
                                {
                                    if (rep.Item2 != item.EnUso)
                                    {
                                        <button type="submit" class="btn btn-primary btn-sm" data-toggle="modal" id="@item.Id" onclick="createModalShow('@Url.Action("VerHerramienta", "Herramienta", new { id = item.Id })')">Ver detalle</button>
                                    }
                                }
                            }
                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary btn-sm" data-toggle="modal" id="@item.Id" onclick="createModalShow('@Url.Action("VerHerramienta", "Herramienta", new { id = item.Id })')">Ver detalle</button>
                        }
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary btn-sm" data-toggle="modal" id="@item.Id" onclick="createModalShow('@Url.Action("VerHerramienta", "Herramienta", new { id = item.Id })')">Ver detalle</button>
                    }

                }
            </td>
            <td>
                <button type="submit" class="btn btn-primary btn-sm" data-toggle="modal" id="edit_@item.Id" onclick="createModalEdit('@Url.Action("popUpHerramienta", "Herramienta" , new {id=item.Id, accion = "2" })')">Editar herramienta</button>
                <button class="btn btn-primary btn-sm" data-toggle="modal" id="delete_@item.Id" data-confirm="¿Estás seguro/a?" onclick="confirmar('@Url.Action("popUpHerramienta", "Herramienta" , new {id=item.Id, accion = "3" })')">Eliminar</button>
            </td>
        </tr>

    }
</table>
@*Paginador de registros*@
@if (Model.Resultado.Count() > 0)
{
    <span>
        <strong>@Model.TotalRegistros</strong> registros encontrados
    </span>
    <span>&nbsp;|&nbsp;</span>
    <span>
        Página <strong>@(Model.PaginaActual)</strong> de
        <strong>@Model.TotalPaginas</strong>
    </span>
    <span>&nbsp;|&nbsp;</span>
}
else
{
    <span>No hay resultados para esta búsqueda</span>
    <span>&nbsp;|&nbsp;</span>
}
@if (Model.PaginaActual > 1)
{
    @Html.ActionLink("<<", "ListaProducto", new { pagina = 1 },
        new { @class = "btn btn-sm btn-default"})
    <span></span>
    @Html.ActionLink("Anterior", "ListaProducto", new { pagina = Model.PaginaActual - 1 },
        new { @class = "btn btn-sm btn-default" });
}
else
{
    @Html.ActionLink("<<", "ListaProducto", new { pagina = 1 },
        new { @class = "btn btn-sm btn-default disabled" })
    <span></span>
    @Html.ActionLink("Anterior", "ListaProducto", new { pagina = 1 },
        new { @class = "btn btn-sm btn-default disabled" })
}
<span></span>
@if (Model.PaginaActual < Model.TotalPaginas)
{
    @Html.ActionLink("Siguiente", "ListaProducto", new { pagina = Model.PaginaActual + 1 },
                    new { @class = "btn btn-sm btn-default" })
    <span></span>
    @Html.ActionLink(">>", "ListaProducto", new { pagina = Model.TotalPaginas },
                    new { @class = "btn btn-sm btn-default" })
}
else
{
    @Html.ActionLink("Siguiente", "ListaProducto", new { pagina = Model.TotalPaginas - 1 },
                    new { @class = "btn btn-sm btn-default disabled" })
    <span></span>
    @Html.ActionLink(">>", "ListaProducto", new { pagina = Model.TotalPaginas },
                    new { @class = "btn btn-sm btn-default disabled" })
}
<div class="modal fade" data-keyboard="false" data-backdrop="static" id="idModalReport" tabindex="-1"></div>
<div class="modal fade" data-keyboard="false" data-backdrop="static" id="idModalShow" tabindex="-1"></div>
<div class="modal fade" data-keyboard="false" data-backdrop="static" id="idModalUpdate" tabindex="-1"></div>
<div class="modal fade" data-keyboard="false" data-backdrop="static" id="idModalElminar" tabindex="-1"></div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
@if (ViewBag.reload != null)
{
    if (ViewBag.reload)
    {
        <script>
            $(document).ready(function () {
                Location.reload(true);
            })
        </script>
    }
}
<script type="text/javascript">


    $(document).ready(function () {
        $('#Nuevo').click(function () {
            var url = $('#idModalRegistrar').data('url');
            $.get(url, function (data) {
                $("#idModalRegistrar").html(data);
                $("#idModalRegistrar").modal('show');
            });
        });
    });

    function createModalReport(url) {
        $.get(url, function (data) {
            $("#idModalReport").html(data);
            $("#idModalReport").modal('show');
        });
    }

    function createModalShow(url) {
        $.get(url, function (data) {
            $("#idModalShow").html(data);
            $("#idModalShow").modal('show');
        });
    }

    function createModalEdit(url) {
        $.get(url, function (data) {
            $("#idModalUpdate").html(data);
            $("#idModalUpdate").modal('show');
        });
    }

    function createModalDelete(url) {
        $.get(url, function (data) {
            $("#idModalElminar").html(data);
            $("#idModalElminar").modal('show');
        });
    }

    function confirmar(url) {
        jQuery(document).ready(function () {
            jQuery('[data-confirm]').click(function (e) {
                if (!confirm(jQuery(this).attr("data-confirm"))) {
                    location.reload(true);
                }
                else {
                    createModalDelete(url);
                }
            })
        })
    }


</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}